local previewers = require("telescope.previewers")

-- bad_files and new_maker is used for disabling the previwer.
-- The emscripten entry is for autogenerated emscripten js which really slows telescope down.
local _bad = { ".*emscripten.*%.js" } -- Array of patterns to not preview with highlighting
local bad_files = function(filepath)
	for _, v in ipairs(_bad) do if filepath:match(v) then return false end end

	return true
end

local new_maker = function(filepath, bufnr, opts)
	opts = opts or {}
	if opts.use_ft_detect == nil then opts.use_ft_detect = true end
	opts.use_ft_detect = opts.use_ft_detect == false and false or
		bad_files(filepath)
	previewers.buffer_previewer_maker(filepath, bufnr, opts)
end

require('telescope').setup {
	defaults = {
		buffer_previewer_maker = new_maker,
		--layout_config = { prompt_position = "top" }
		-- sorting_strategies = "descending"
	},
	extensions = {
		["ui-select"] = {
			require("telescope.themes").get_dropdown {
				-- even more opts
			}

			-- pseudo code / specification for writing custom displays, like the one
			-- for "codeactions"
			-- specific_opts = {
			--   [kind] = {
			--     make_indexed = function(items) -> indexed_items, width,
			--     make_displayer = function(widths) -> displayer
			--     make_display = function(displayer) -> function(e)
			--     make_ordinal = function(e) -> string
			--   },
			--   -- for example to disable the custom builtin "codeactions" display
			--      do the following
			--   codeactions = false,
			-- }
		}
	}
}

-- To get ui-select loaded and working with telescope, you need to call
-- load_extension, somewhere after setup function:
require("telescope").load_extension("ui-select")
